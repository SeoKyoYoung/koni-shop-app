{"version":3,"file":"static/js/928.6929acde.chunk.js","mappings":"qQAUIA,EAAKC,EAAAA,GAAAA,IAAH,4CAIFC,EAAKD,EAAAA,GAAAA,GAAH,+DAES,SAAAE,GAAK,OAAIA,EAAMC,gBA0F5B,SAASC,EAAWF,GAMlB,OAJAG,EAAAA,EAAAA,YAAU,WACNH,EAAMI,eAAc,MAGF,IAAnBJ,EAAMK,UAEE,2EACiB,IAAnBL,EAAMK,UACJ,2EACiB,IAAnBL,EAAMK,UACJ,gFADL,EAKV,SAASC,EAAKN,GACd,IAAIO,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAEpB,OACA,0CAAQF,EAAOP,EAAMU,OAYzB,OAAeC,EAAAA,EAAAA,KARf,SAAsBC,GAElB,MAAO,CACHA,MAAOA,EAAMC,WAKrB,EAvHA,SAAgBb,GAEZ,OAA0Cc,EAAAA,EAAAA,WAAS,GAAnD,eAAMC,EAAN,KAAqBC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAMG,EAAN,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,GAAzC,eAAMT,EAAN,KAAgBc,EAAhB,KACA,GAAoCL,EAAAA,EAAAA,WAAS,GAA7C,eAAMM,EAAN,KAAkBhB,EAAlB,MAEAD,EAAAA,EAAAA,YAAU,WAIN,IAAIkB,EAAQC,YAAW,WAAQN,GAAiB,KAAW,KAE3D,OAAO,WAAMO,aAAaF,MAE3B,IAEH,IAAMX,GAAOc,EAAAA,EAAAA,MAAPd,GACFe,GAAUC,EAAAA,EAAAA,MAEd,OACI,iBAAKC,UAAU,YAAf,WAEI,SAAC,EAAD,WACI,SAAC,EAAD,CAAIA,UAAU,MAAM,eAAI,OAAxB,sBAGFV,GACF,kBAAOW,SAAU,SAACC,GAAQX,EAAcW,EAAIC,OAAOC,UAG/ChB,GACI,gBAAKY,UAAU,WAAf,UACI,0GAEN,MAIR,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBAAKK,IAAG,mDAAmD,EAAHtB,EAAM,EAAtD,QAAgEuB,MAAM,YAEhF,iBAAKN,UAAU,gBAAf,WACE,wBAAM3B,EAAMkC,MAAMxB,GAAIyB,SACtB,uBAAKnC,EAAMkC,MAAMxB,GAAI0B,WACrB,yBAAKpC,EAAMkC,MAAMxB,GAAI2B,MAArB,aAEA,SAAC/B,EAAD,CAAMC,OAAQP,EAAMO,OAAQG,GAAIA,KAEhC,mBAAQiB,UAAU,iBAAiBW,QAAS,WAQtCtC,EAAMuC,SAAS,CAAEC,KAAM,2BAAQC,QAAS,CAAE/B,GAAIV,EAAMkC,MAAMxB,GAAIA,GAAIgC,KAAM1C,EAAMkC,MAAMxB,GAAIyB,MAAOQ,KAAM,KAErGlB,EAAQmB,KAAK,UAVnB,uCAcA,mBAAQjB,UAAU,iBAAiBW,QAAS,WAAMb,EAAQmB,KAAK,MAA/D,6CAIF,UAACC,EAAA,EAAD,CAAKlB,UAAU,OAAOmB,QAAQ,OAAOC,iBAAiB,SAAtD,WACI,SAACF,EAAA,OAAD,WACI,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASV,QAAS,WAAMnB,EAAY,GAAIf,GAAc,IAAzE,wBAEJ,SAACyC,EAAA,OAAD,WACI,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASV,QAAS,WAAMnB,EAAY,GAAIf,GAAc,IAAzE,4BAIR,SAAC6C,EAAA,EAAD,CAAeC,GAAI9B,EAAY+B,WAAW,MAAMC,QAAS,IAAzD,UAEI,SAAClD,EAAD,CAAYG,SAAUA,EAAUD,cAAeA","sources":["Detail.js"],"sourcesContent":["import { Alert } from 'bootstrap';\nimport { React, useEffect, useState, useContext } from 'react';//컴포넌트엔 리액트 import필수\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Navbar,Container,Nav,NavDropdown } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport {stockContext} from './App.js'\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from 'react-redux';\n\nlet 박스 = styled.div`\n    padding: 20px;\n`;\n\nlet 제목 = styled.h4`\n    font-size: 25px;\n    color : ${ props => props.색상 }\n`;\n\nfunction Detail(props){//컴포넌트는 대문자\n    \n    let [ isShowMyAlert, setIsShowMyAlert ] = useState(true);\n    let [ inputValue, setInputValue ] = useState('');\n    let [ clickBtn, setClickBtn ] = useState(0);\n    let [ showSwitch, setShowSwitch ] = useState(false);\n\n    useEffect(()=>{\n        //컴포넌트가 mount 되었을 때 \n        //update 되었을 때\n        //특정코드를 실행할 수 있음\n        let timer = setTimeout(() => { setIsShowMyAlert(false); }, 2000);\n\n        return ()=>{ clearTimeout(timer) }//Detatil이 Unmount될 때 실행\n\n    }, []);//실행조건: []안 변수가 변경될 때만 실행, 비어있으면 초기 생성 1번만 실행됨.\n\n    let { id } = useParams();\n    let history = useHistory();\n\n    return (\n        <div className='container'>\n\n            <박스>\n                <제목 className=\"red\" 색상={'blue'}>Detail</제목>\n            </박스>\n\n            { inputValue }\n            <input onChange={(evt)=>{ setInputValue(evt.target.value) }}/>\n\n            { \n                isShowMyAlert \n                ?   <div className='my-alert'>\n                        <p>재고가 얼마 남지 않았습니다.</p>\n                    </div>\n                : null\n            }\n            \n\n          <div className='row'>\n            <div className=\"col-md-6\">\n              <img src={ `https://codingapple1.github.io/shop/shoes${(id*1)+1}.jpg` } width='100%'/>\n            </div>\n            <div className='col-md-6 mt-4'>\n              <h4>{ props.shoes[id].title}</h4>\n              <p>{ props.shoes[id].content}</p>\n              <p>{ props.shoes[id].price}원</p>\n\n              <Info stocks={props.stocks} id={id}></Info>\n\n              <button className='btn btn-danger' onClick={()=>{ \n\n                //   let tmpStocks = [...props.stocks];\n\n                //   tmpStocks[id]--;\n\n                //   props.setStocks([...tmpStocks])\n                \n                    props.dispatch({ type: '항목추가', payload: { id: props.shoes[id].id, name: props.shoes[id].title, quan: 4 } });\n\n                    history.push('/cart');\n                }\n                  \n                  }>주문하기</button>\n              <button className='btn btn-danger' onClick={()=>{ history.push('/');}}>뒤로가기</button>\n            </div>\n          </div>\n\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n                <Nav.Item>\n                    <Nav.Link eventKey=\"link-0\" onClick={()=>{ setClickBtn(0); setShowSwitch(false); }}>option1</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"link-1\" onClick={()=>{ setClickBtn(1); setShowSwitch(false); }}>Option 2</Nav.Link>\n                </Nav.Item>\n            </Nav>\n\n            <CSSTransition in={showSwitch} classNames=\"wow\" timeout={500}>\n\n                <TabContent clickBtn={clickBtn} setShowSwitch={setShowSwitch}/>\n            </CSSTransition>\n\n\n        </div>\n    )\n  }\n\n  function TabContent(props){\n\n    useEffect(()=>{\n        props.setShowSwitch(true);\n    })\n\n    if(props.clickBtn === 0){\n\n        return <div>0번째 내용입니다.</div>\n    }else if(props.clickBtn === 1){\n        return <div>1번째 내용입니다.</div>\n    }else if(props.clickBtn === 2){\n        return <div>2번째 내용입니다.</div>\n    }\n  }\n\nfunction Info(props){\nlet stocks = useContext(stockContext);\n\n    return (\n    <p>재고: {stocks[props.id]}</p>\n    )\n}\n\nfunction state를props화(state){\n\n    return {\n        state: state.reducer //state라는 이름의 props로 바꿔줌\n    }\n}\n\n\nexport default connect(state를props화)(Detail)\n"],"names":["박스","styled","제목","props","색상","TabContent","useEffect","setShowSwitch","clickBtn","Info","stocks","useContext","stockContext","id","connect","state","reducer","useState","isShowMyAlert","setIsShowMyAlert","inputValue","setInputValue","setClickBtn","showSwitch","timer","setTimeout","clearTimeout","useParams","history","useHistory","className","onChange","evt","target","value","src","width","shoes","title","content","price","onClick","dispatch","type","payload","name","quan","push","Nav","variant","defaultActiveKey","eventKey","CSSTransition","in","classNames","timeout"],"sourceRoot":""}